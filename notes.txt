Attribute Directives 

- They sit on elements just like attributes. 
- Eg : ngStyle, ngColor
- Property and event binding (normal HTML attribute)
- Change the properties or element they are added to.


Structural Directives 

- They sit on elements just like attributes, but they also change the structure of the DOM.
- Eg : *ngIf, *ngFor
- leads with * (normal HTML attribute)
- Affect the whole area in the DOM


To create directive angular cli -

ng g d basic-highlight/basic-highlight --spec false
ng g directive better-highlight/better-highlight --spec false



NOTE - 

You can't place more than one Structural Directives on same element i.e. *ngIf & *ngFor

In TS, private property specifier makes property of the class & assigns the value to property


Directives also have component life cycle hook. it has oninit, it doesn't have on destroy but it won't have 
onafterViewInit as directive doesn't have template

selector in directive.ts is '[]'. i.e. it is attribute in html tag


Angular is not limited to running in the browser. it also works with service workers. these are environments where u might not have access to DOM.
So if u try to change the DOM as in with basic highlight by directly accessing the native element & the style of this element
u might get some error in some cases.

It is a better practice to use render a DOM access & renderer. 


